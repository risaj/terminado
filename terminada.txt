<html>
<head>
<meta http-equiv="Content-type" content="text/html;
charset=utf-8">
<meta name="viewport" id="viewport" content="width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0, user-scalable=no;" />
<script type="text/javascript" charset="utf-8" src="phonegap.js"></script>

<script type="text/javascript" charset="utf-8">

    var pictureSource; // Origen de la imagen
    var destinationType; // Fo

function onBodyLoad() {
document.addEventListener("deviceready",onDeviceReady,
false);
}
function onDeviceReady() {


pictureSource=navigator.camera.PictureSourceType;
destinationType=navigator.camera.DestinationType;
//playAudio("file:///Sounds/love_rain.mp3")

}

        
        var my_media = null;
        var mediaTimer = null;

        function playAudio(src) {
            if (my_media == null) {
                // Crea un objeto `Media` desde el argumento
                my_media = new Media(src, onSuccess, onError);
            }
            my_media.play();

            // Actualiza la posicion cada segundo
            if (mediaTimer == null) {
                mediaTimer = setInterval(function() {
                    // Obtiene la posiciï¿½n actual
                    my_media.getCurrentPosition(
                        // Funcion 'callback' satisfactoria
                        function(position) {
                            if (position > -1) {
                                setAudioPosition((position) + " seg");
                            }
                        },
                        // Funcion 'callback' de error
                        function(e) {
                            console.log("Error obteniendo posicion=" + e);
                            setAudioPosition("Error: " + e);
                        }
                    );
                }, 1000);
            }
        }

        // Pausa la reproduccion
        //
        function pauseAudio() {
            if (my_media) {
                my_media.pause();
            }
        }

        // Detiene la reproduccion
        //
        
            clearInterval(mediaTimer);{
            mediaTimer = null;
        }

        // Funcion 'callback' onSuccess
        //
        function onSuccess() {
            console.log("playAudio():Audio Correcto");
        }

        // Funcion 'callback' onError
        //
        function onError(error) {
            alert('codigo: ' + error.code + '\n' +
                  'mensaje: ' + error.message + '\n');
        }

        // Muestra la posicion
        //
        function setAudioPosition(position) {
            document.getElementById('audio_position').innerHTML = position;
        }



 
  function onPhotoDataSuccess(imageData) {
      // Descomenta esta linea para ver la imagen codificada en base64
      console.log(imageData);

      // Obtiene el elemento HTML de la imagen
      //
      var smallImage = document.getElementById('smallImage');

      // Revela el elemento de la imagen
      //
      smallImage.style.display = 'block';

      // Muestra la foto capturada
      // Se usan reglas CSS para dimensionar la imagen
      //
      smallImage.src = "data:image/jpeg;base64," + imageData;
    }

    // Llamada cuando la foto se retorna sin problemas
    //
    function onPhotoURISuccess(imageURI) {
      // Descomenta esta linea para ver la ruta URI al fichero de imagen
      console.log(imageURI);

      // Obtiene el elemento HTML de la imagen
      //
      var largeImage = document.getElementById('largeImage');

      // Revela el elemento de la imagen
      //
      largeImage.style.display = 'block';

      // Muestra la foto capturada
      // Se usan reglas CSS para dimensionar la imagen
      //
      largeImage.src = imageURI;
    }

    // Un boton llamara a esta funcion
    //
    function capturePhoto() {
      // Toma la imagen y la retorna como una string codificada en base64
      navigator.camera.getPicture(onPhotoDataSuccess, onFail, { quality: 50 });
    }

    // Un boton llamara a esta funcion
    //
    function capturePhotoEdit() {
      // Toma la imagen, permite editarla y la retorna como una string codificada en base64
      navigator.camera.getPicture(onPhotoDataSuccess, onFail, { quality: 20, allowEdit: true });
    }

    // Un boton llamara a esta funcion
    //
    function getPhoto(source) {
      // Retorna la ruta del fichero de imagen desde el origen especificado
      navigator.camera.getPicture(onPhotoURISuccess, onFail, { quality: 50,
        destinationType: destinationType.FILE_URI,
        sourceType: source });
    }

    // Llamado cuando algo malo ocurre
    //
    function onFail(message) {
      alert('Ocurrio un error: ' + message);
    }





</script>

</head>
<body onload="onBodyLoad()">
</p><button onclick= playAudio('file:///Sounds/fumando_vamos_a_casa.mp3');>Play</button></p>
<p><button onclick= "pauseAudio();">Pausa</button></p>
<p id="audio_position"></p>
        

<button onclick="capturePhoto();">Capturar foto</button> <br>
<button onclick="getPhoto(pictureSource.PHOTOLIBRARY);">Desde la libreria de imagenes</button><br>
<button onclick="getPhoto(pictureSource.SAVEDPHOTOALBUM);">Desde el album de fotos</button><br>


</body>
</html>
